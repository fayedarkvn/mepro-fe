/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from "@tanstack/react-router"

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as indexPageIndexImport } from "./routes/(index-page)/index"
import { Route as profileProfileImport } from "./routes/(profile)/profile"
import { Route as infomationalInfomationalImport } from "./routes/(infomational)/_infomational"
import { Route as dashboardDashboardImport } from "./routes/(dashboard)/dashboard"
import { Route as authAuthImport } from "./routes/(auth)/_auth"
import { Route as dashboardDashboardIndexImport } from "./routes/(dashboard)/dashboard/index"
import { Route as infomationalInfomationalContactImport } from "./routes/(infomational)/_infomational/contact"
import { Route as infomationalInfomationalAboutImport } from "./routes/(infomational)/_infomational/about"
import { Route as dashboardDashboardSettingsImport } from "./routes/(dashboard)/dashboard/settings"
import { Route as dashboardDashboardPostsImport } from "./routes/(dashboard)/dashboard/posts"
import { Route as authAuthSignupImport } from "./routes/(auth)/_auth/signup"
import { Route as authAuthLoginImport } from "./routes/(auth)/_auth/login"
import { Route as profileProfileIdIndexImport } from "./routes/(profile)/profile.$id/index"
import { Route as profileProfileIdPostsImport } from "./routes/(profile)/profile.$id/posts"
import { Route as profileProfileIdPhotosImport } from "./routes/(profile)/profile.$id/photos"

// Create Virtual Routes

const infomationalImport = createFileRoute("/(infomational)")()
const authImport = createFileRoute("/(auth)")()

// Create/Update Routes

const infomationalRoute = infomationalImport.update({
  id: "/(infomational)",
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: "/(auth)",
  getParentRoute: () => rootRoute,
} as any)

const indexPageIndexRoute = indexPageIndexImport.update({
  id: "/(index-page)/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const profileProfileRoute = profileProfileImport.update({
  id: "/(profile)/profile",
  path: "/profile",
  getParentRoute: () => rootRoute,
} as any)

const infomationalInfomationalRoute = infomationalInfomationalImport.update({
  id: "/_infomational",
  getParentRoute: () => infomationalRoute,
} as any)

const dashboardDashboardRoute = dashboardDashboardImport.update({
  id: "/(dashboard)/dashboard",
  path: "/dashboard",
  getParentRoute: () => rootRoute,
} as any)

const authAuthRoute = authAuthImport.update({
  id: "/_auth",
  getParentRoute: () => authRoute,
} as any)

const dashboardDashboardIndexRoute = dashboardDashboardIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => dashboardDashboardRoute,
} as any)

const infomationalInfomationalContactRoute =
  infomationalInfomationalContactImport.update({
    id: "/contact",
    path: "/contact",
    getParentRoute: () => infomationalInfomationalRoute,
  } as any)

const infomationalInfomationalAboutRoute =
  infomationalInfomationalAboutImport.update({
    id: "/about",
    path: "/about",
    getParentRoute: () => infomationalInfomationalRoute,
  } as any)

const dashboardDashboardSettingsRoute = dashboardDashboardSettingsImport.update(
  {
    id: "/settings",
    path: "/settings",
    getParentRoute: () => dashboardDashboardRoute,
  } as any,
)

const dashboardDashboardPostsRoute = dashboardDashboardPostsImport.update({
  id: "/posts",
  path: "/posts",
  getParentRoute: () => dashboardDashboardRoute,
} as any)

const authAuthSignupRoute = authAuthSignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => authAuthRoute,
} as any)

const authAuthLoginRoute = authAuthLoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => authAuthRoute,
} as any)

const profileProfileIdIndexRoute = profileProfileIdIndexImport.update({
  id: "/$id/",
  path: "/$id/",
  getParentRoute: () => profileProfileRoute,
} as any)

const profileProfileIdPostsRoute = profileProfileIdPostsImport.update({
  id: "/$id/posts",
  path: "/$id/posts",
  getParentRoute: () => profileProfileRoute,
} as any)

const profileProfileIdPhotosRoute = profileProfileIdPhotosImport.update({
  id: "/$id/photos",
  path: "/$id/photos",
  getParentRoute: () => profileProfileRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/(auth)": {
      id: "/(auth)"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    "/(auth)/_auth": {
      id: "/(auth)/_auth"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof authAuthImport
      parentRoute: typeof authRoute
    }
    "/(dashboard)/dashboard": {
      id: "/(dashboard)/dashboard"
      path: "/dashboard"
      fullPath: "/dashboard"
      preLoaderRoute: typeof dashboardDashboardImport
      parentRoute: typeof rootRoute
    }
    "/(infomational)": {
      id: "/(infomational)"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof infomationalImport
      parentRoute: typeof rootRoute
    }
    "/(infomational)/_infomational": {
      id: "/(infomational)/_infomational"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof infomationalInfomationalImport
      parentRoute: typeof infomationalRoute
    }
    "/(profile)/profile": {
      id: "/(profile)/profile"
      path: "/profile"
      fullPath: "/profile"
      preLoaderRoute: typeof profileProfileImport
      parentRoute: typeof rootRoute
    }
    "/(index-page)/": {
      id: "/(index-page)/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof indexPageIndexImport
      parentRoute: typeof rootRoute
    }
    "/(auth)/_auth/login": {
      id: "/(auth)/_auth/login"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof authAuthLoginImport
      parentRoute: typeof authAuthImport
    }
    "/(auth)/_auth/signup": {
      id: "/(auth)/_auth/signup"
      path: "/signup"
      fullPath: "/signup"
      preLoaderRoute: typeof authAuthSignupImport
      parentRoute: typeof authAuthImport
    }
    "/(dashboard)/dashboard/posts": {
      id: "/(dashboard)/dashboard/posts"
      path: "/posts"
      fullPath: "/dashboard/posts"
      preLoaderRoute: typeof dashboardDashboardPostsImport
      parentRoute: typeof dashboardDashboardImport
    }
    "/(dashboard)/dashboard/settings": {
      id: "/(dashboard)/dashboard/settings"
      path: "/settings"
      fullPath: "/dashboard/settings"
      preLoaderRoute: typeof dashboardDashboardSettingsImport
      parentRoute: typeof dashboardDashboardImport
    }
    "/(infomational)/_infomational/about": {
      id: "/(infomational)/_infomational/about"
      path: "/about"
      fullPath: "/about"
      preLoaderRoute: typeof infomationalInfomationalAboutImport
      parentRoute: typeof infomationalInfomationalImport
    }
    "/(infomational)/_infomational/contact": {
      id: "/(infomational)/_infomational/contact"
      path: "/contact"
      fullPath: "/contact"
      preLoaderRoute: typeof infomationalInfomationalContactImport
      parentRoute: typeof infomationalInfomationalImport
    }
    "/(dashboard)/dashboard/": {
      id: "/(dashboard)/dashboard/"
      path: "/"
      fullPath: "/dashboard/"
      preLoaderRoute: typeof dashboardDashboardIndexImport
      parentRoute: typeof dashboardDashboardImport
    }
    "/(profile)/profile/$id/photos": {
      id: "/(profile)/profile/$id/photos"
      path: "/$id/photos"
      fullPath: "/profile/$id/photos"
      preLoaderRoute: typeof profileProfileIdPhotosImport
      parentRoute: typeof profileProfileImport
    }
    "/(profile)/profile/$id/posts": {
      id: "/(profile)/profile/$id/posts"
      path: "/$id/posts"
      fullPath: "/profile/$id/posts"
      preLoaderRoute: typeof profileProfileIdPostsImport
      parentRoute: typeof profileProfileImport
    }
    "/(profile)/profile/$id/": {
      id: "/(profile)/profile/$id/"
      path: "/$id"
      fullPath: "/profile/$id"
      preLoaderRoute: typeof profileProfileIdIndexImport
      parentRoute: typeof profileProfileImport
    }
  }
}

// Create and export the route tree

interface authAuthRouteChildren {
  authAuthLoginRoute: typeof authAuthLoginRoute
  authAuthSignupRoute: typeof authAuthSignupRoute
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthLoginRoute: authAuthLoginRoute,
  authAuthSignupRoute: authAuthSignupRoute,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

interface authRouteChildren {
  authAuthRoute: typeof authAuthRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthRoute: authAuthRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

interface dashboardDashboardRouteChildren {
  dashboardDashboardPostsRoute: typeof dashboardDashboardPostsRoute
  dashboardDashboardSettingsRoute: typeof dashboardDashboardSettingsRoute
  dashboardDashboardIndexRoute: typeof dashboardDashboardIndexRoute
}

const dashboardDashboardRouteChildren: dashboardDashboardRouteChildren = {
  dashboardDashboardPostsRoute: dashboardDashboardPostsRoute,
  dashboardDashboardSettingsRoute: dashboardDashboardSettingsRoute,
  dashboardDashboardIndexRoute: dashboardDashboardIndexRoute,
}

const dashboardDashboardRouteWithChildren =
  dashboardDashboardRoute._addFileChildren(dashboardDashboardRouteChildren)

interface infomationalInfomationalRouteChildren {
  infomationalInfomationalAboutRoute: typeof infomationalInfomationalAboutRoute
  infomationalInfomationalContactRoute: typeof infomationalInfomationalContactRoute
}

const infomationalInfomationalRouteChildren: infomationalInfomationalRouteChildren =
  {
    infomationalInfomationalAboutRoute: infomationalInfomationalAboutRoute,
    infomationalInfomationalContactRoute: infomationalInfomationalContactRoute,
  }

const infomationalInfomationalRouteWithChildren =
  infomationalInfomationalRoute._addFileChildren(
    infomationalInfomationalRouteChildren,
  )

interface infomationalRouteChildren {
  infomationalInfomationalRoute: typeof infomationalInfomationalRouteWithChildren
}

const infomationalRouteChildren: infomationalRouteChildren = {
  infomationalInfomationalRoute: infomationalInfomationalRouteWithChildren,
}

const infomationalRouteWithChildren = infomationalRoute._addFileChildren(
  infomationalRouteChildren,
)

interface profileProfileRouteChildren {
  profileProfileIdPhotosRoute: typeof profileProfileIdPhotosRoute
  profileProfileIdPostsRoute: typeof profileProfileIdPostsRoute
  profileProfileIdIndexRoute: typeof profileProfileIdIndexRoute
}

const profileProfileRouteChildren: profileProfileRouteChildren = {
  profileProfileIdPhotosRoute: profileProfileIdPhotosRoute,
  profileProfileIdPostsRoute: profileProfileIdPostsRoute,
  profileProfileIdIndexRoute: profileProfileIdIndexRoute,
}

const profileProfileRouteWithChildren = profileProfileRoute._addFileChildren(
  profileProfileRouteChildren,
)

export interface FileRoutesByFullPath {
  "/": typeof indexPageIndexRoute
  "/dashboard": typeof dashboardDashboardRouteWithChildren
  "/profile": typeof profileProfileRouteWithChildren
  "/login": typeof authAuthLoginRoute
  "/signup": typeof authAuthSignupRoute
  "/dashboard/posts": typeof dashboardDashboardPostsRoute
  "/dashboard/settings": typeof dashboardDashboardSettingsRoute
  "/about": typeof infomationalInfomationalAboutRoute
  "/contact": typeof infomationalInfomationalContactRoute
  "/dashboard/": typeof dashboardDashboardIndexRoute
  "/profile/$id/photos": typeof profileProfileIdPhotosRoute
  "/profile/$id/posts": typeof profileProfileIdPostsRoute
  "/profile/$id": typeof profileProfileIdIndexRoute
}

export interface FileRoutesByTo {
  "/": typeof indexPageIndexRoute
  "/profile": typeof profileProfileRouteWithChildren
  "/login": typeof authAuthLoginRoute
  "/signup": typeof authAuthSignupRoute
  "/dashboard/posts": typeof dashboardDashboardPostsRoute
  "/dashboard/settings": typeof dashboardDashboardSettingsRoute
  "/about": typeof infomationalInfomationalAboutRoute
  "/contact": typeof infomationalInfomationalContactRoute
  "/dashboard": typeof dashboardDashboardIndexRoute
  "/profile/$id/photos": typeof profileProfileIdPhotosRoute
  "/profile/$id/posts": typeof profileProfileIdPostsRoute
  "/profile/$id": typeof profileProfileIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/(auth)": typeof authRouteWithChildren
  "/(auth)/_auth": typeof authAuthRouteWithChildren
  "/(dashboard)/dashboard": typeof dashboardDashboardRouteWithChildren
  "/(infomational)": typeof infomationalRouteWithChildren
  "/(infomational)/_infomational": typeof infomationalInfomationalRouteWithChildren
  "/(profile)/profile": typeof profileProfileRouteWithChildren
  "/(index-page)/": typeof indexPageIndexRoute
  "/(auth)/_auth/login": typeof authAuthLoginRoute
  "/(auth)/_auth/signup": typeof authAuthSignupRoute
  "/(dashboard)/dashboard/posts": typeof dashboardDashboardPostsRoute
  "/(dashboard)/dashboard/settings": typeof dashboardDashboardSettingsRoute
  "/(infomational)/_infomational/about": typeof infomationalInfomationalAboutRoute
  "/(infomational)/_infomational/contact": typeof infomationalInfomationalContactRoute
  "/(dashboard)/dashboard/": typeof dashboardDashboardIndexRoute
  "/(profile)/profile/$id/photos": typeof profileProfileIdPhotosRoute
  "/(profile)/profile/$id/posts": typeof profileProfileIdPostsRoute
  "/(profile)/profile/$id/": typeof profileProfileIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/dashboard"
    | "/profile"
    | "/login"
    | "/signup"
    | "/dashboard/posts"
    | "/dashboard/settings"
    | "/about"
    | "/contact"
    | "/dashboard/"
    | "/profile/$id/photos"
    | "/profile/$id/posts"
    | "/profile/$id"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/profile"
    | "/login"
    | "/signup"
    | "/dashboard/posts"
    | "/dashboard/settings"
    | "/about"
    | "/contact"
    | "/dashboard"
    | "/profile/$id/photos"
    | "/profile/$id/posts"
    | "/profile/$id"
  id:
    | "__root__"
    | "/(auth)"
    | "/(auth)/_auth"
    | "/(dashboard)/dashboard"
    | "/(infomational)"
    | "/(infomational)/_infomational"
    | "/(profile)/profile"
    | "/(index-page)/"
    | "/(auth)/_auth/login"
    | "/(auth)/_auth/signup"
    | "/(dashboard)/dashboard/posts"
    | "/(dashboard)/dashboard/settings"
    | "/(infomational)/_infomational/about"
    | "/(infomational)/_infomational/contact"
    | "/(dashboard)/dashboard/"
    | "/(profile)/profile/$id/photos"
    | "/(profile)/profile/$id/posts"
    | "/(profile)/profile/$id/"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRoute: typeof authRouteWithChildren
  dashboardDashboardRoute: typeof dashboardDashboardRouteWithChildren
  infomationalRoute: typeof infomationalRouteWithChildren
  profileProfileRoute: typeof profileProfileRouteWithChildren
  indexPageIndexRoute: typeof indexPageIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  authRoute: authRouteWithChildren,
  dashboardDashboardRoute: dashboardDashboardRouteWithChildren,
  infomationalRoute: infomationalRouteWithChildren,
  profileProfileRoute: profileProfileRouteWithChildren,
  indexPageIndexRoute: indexPageIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/(dashboard)/dashboard",
        "/(infomational)",
        "/(profile)/profile",
        "/(index-page)/"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_auth"
      ]
    },
    "/(auth)/_auth": {
      "filePath": "(auth)/_auth.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_auth/login",
        "/(auth)/_auth/signup"
      ]
    },
    "/(dashboard)/dashboard": {
      "filePath": "(dashboard)/dashboard.tsx",
      "children": [
        "/(dashboard)/dashboard/posts",
        "/(dashboard)/dashboard/settings",
        "/(dashboard)/dashboard/"
      ]
    },
    "/(infomational)": {
      "filePath": "(infomational)",
      "children": [
        "/(infomational)/_infomational"
      ]
    },
    "/(infomational)/_infomational": {
      "filePath": "(infomational)/_infomational.tsx",
      "parent": "/(infomational)",
      "children": [
        "/(infomational)/_infomational/about",
        "/(infomational)/_infomational/contact"
      ]
    },
    "/(profile)/profile": {
      "filePath": "(profile)/profile.tsx",
      "children": [
        "/(profile)/profile/$id/photos",
        "/(profile)/profile/$id/posts",
        "/(profile)/profile/$id/"
      ]
    },
    "/(index-page)/": {
      "filePath": "(index-page)/index.tsx"
    },
    "/(auth)/_auth/login": {
      "filePath": "(auth)/_auth/login.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/signup": {
      "filePath": "(auth)/_auth/signup.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(dashboard)/dashboard/posts": {
      "filePath": "(dashboard)/dashboard/posts.tsx",
      "parent": "/(dashboard)/dashboard"
    },
    "/(dashboard)/dashboard/settings": {
      "filePath": "(dashboard)/dashboard/settings.tsx",
      "parent": "/(dashboard)/dashboard"
    },
    "/(infomational)/_infomational/about": {
      "filePath": "(infomational)/_infomational/about.tsx",
      "parent": "/(infomational)/_infomational"
    },
    "/(infomational)/_infomational/contact": {
      "filePath": "(infomational)/_infomational/contact.tsx",
      "parent": "/(infomational)/_infomational"
    },
    "/(dashboard)/dashboard/": {
      "filePath": "(dashboard)/dashboard/index.tsx",
      "parent": "/(dashboard)/dashboard"
    },
    "/(profile)/profile/$id/photos": {
      "filePath": "(profile)/profile.$id/photos.tsx",
      "parent": "/(profile)/profile"
    },
    "/(profile)/profile/$id/posts": {
      "filePath": "(profile)/profile.$id/posts.tsx",
      "parent": "/(profile)/profile"
    },
    "/(profile)/profile/$id/": {
      "filePath": "(profile)/profile.$id/index.tsx",
      "parent": "/(profile)/profile"
    }
  }
}
ROUTE_MANIFEST_END */
